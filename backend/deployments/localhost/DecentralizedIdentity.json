{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "AccessRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "name": "IdentityCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAge",
          "type": "uint256"
        }
      ],
      "name": "IdentityUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_age",
          "type": "uint256"
        }
      ],
      "name": "createIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllIdentities",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getIdentity",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasIdentity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "hasValidIdentity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "identities",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "identitiesByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_newAge",
          "type": "uint256"
        }
      ],
      "name": "updateIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x99a4779b0ac22481188cca3cc685df5b368010bbb3923156c2ff5420719203f4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1307714",
    "logsBloom": "0x
    "blockHash": "0xbf9839466ba6fdee1c8a81a5ae55e6a0ceb32a4f62667917e14d3733be640fae",
    "transactionHash": "0x99a4779b0ac22481188cca3cc685df5b368010bbb3923156c2ff5420719203f4",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1307714",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "78c15b832e428c5a8b69090c95ecbaea",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAge\",\"type\":\"uint256\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"}],\"name\":\"createIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllIdentities\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getIdentity\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasIdentity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"hasValidIdentity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"identities\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"identitiesByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_newAge\",\"type\":\"uint256\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements a decentralized identity system on the CELO blockchain.\",\"kind\":\"dev\",\"methods\":{\"createIdentity(string,uint256)\":{\"details\":\"Function to create a new identity.\",\"params\":{\"_age\":\"The age of the identity owner.\",\"_name\":\"The name of the identity owner.\"}},\"getAllIdentities()\":{\"details\":\"Function to get a list of all identities.\",\"returns\":{\"_0\":\"allIdentities An array containing all valid identity addresses.\"}},\"getIdentity(address)\":{\"details\":\"Function to get identity information for a given address.\",\"params\":{\"_owner\":\"The address of the identity owner.\"},\"returns\":{\"_0\":\"name The name of the identity owner.\",\"_1\":\"age The age of the identity owner.\"}},\"hasValidIdentity(address)\":{\"details\":\"Function to check if an address has a valid identity.\",\"params\":{\"_owner\":\"The address to check.\"},\"returns\":{\"_0\":\"true if the address has a valid identity, false otherwise.\"}},\"revokeAccess()\":{\"details\":\"Function to revoke access and delete identity.\"},\"updateIdentity(string,uint256)\":{\"details\":\"Function to update identity information.\",\"params\":{\"_newAge\":\"The new age of the identity owner.\",\"_newName\":\"The new name of the identity owner.\"}}},\"title\":\"Decentralized Identity Smart Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Did.sol\":\"DecentralizedIdentity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Did.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Decentralized Identity Smart Contract\\n * @dev Implements a decentralized identity system on the CELO blockchain.\\n */\\ncontract DecentralizedIdentity {\\n    /**\\n     * @dev Struct to represent identity information.\\n     */\\n    struct Identity {\\n        string name;\\n        uint age;\\n        bool exists;\\n        address owner;\\n    }\\n\\n    // Mapping to store identities with their corresponding  addresses\\n    mapping(address => Identity) public identities;\\n    // Mapping to store the order in which identities were created\\n    mapping(uint => address) public identitiesByIndex;\\n    // Mapping to track whether an address has a valid identity\\n    mapping(address => bool) public hasIdentity;\\n\\n    // Event emitted when a new identity is created\\n    event IdentityCreated(address indexed owner, string name, uint age);\\n    // Event emitted when identity information is updated\\n    event IdentityUpdated(address indexed owner, string newName, uint newAge);\\n    // Event emitted when access is revoked\\n    event AccessRevoked(address indexed owner);\\n\\n    /**\\n     * @dev Modifier to restrict access to the owner only.\\n     */\\n    modifier onlyOwner {\\n        require(identities[msg.sender].exists, \\\"Identity does not exist\\\");\\n        require(identities[msg.sender].owner == msg.sender, \\\"Not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to check if the caller has a valid identity.\\n     */\\n    modifier onlyValidIdentity {\\n        require(hasIdentity[msg.sender], \\\"Identity does not exist\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Function to create a new identity.\\n     * @param _name The name of the identity owner.\\n     * @param _age The age of the identity owner.\\n     */\\n    function createIdentity(string memory _name, uint _age) external {\\n        require(!identities[msg.sender].exists, \\\"Identity already exists\\\");\\n\\n        Identity storage newIdentity = identities[msg.sender];\\n        newIdentity.name = _name;\\n        newIdentity.age = _age;\\n        newIdentity.exists = true;\\n        newIdentity.owner = msg.sender;\\n\\n        hasIdentity[msg.sender] = true;\\n        identitiesByIndex[block.number - 1] = msg.sender; // Store the index for getAllIdentities\\n\\n        emit IdentityCreated(msg.sender, _name, _age);\\n    }\\n\\n    /**\\n     * @dev Function to update identity information.\\n     * @param _newName The new name of the identity owner.\\n     * @param _newAge The new age of the identity owner.\\n     */\\n    function updateIdentity(string memory _newName, uint _newAge) external onlyOwner {\\n        Identity storage existingIdentity = identities[msg.sender];\\n        existingIdentity.name = _newName;\\n        existingIdentity.age = _newAge;\\n\\n        emit IdentityUpdated(msg.sender, _newName, _newAge);\\n    }\\n\\n    /**\\n     * @dev Function to revoke access and delete identity.\\n     */\\n    function revokeAccess() external onlyValidIdentity {\\n        delete identities[msg.sender];\\n        hasIdentity[msg.sender] = false;\\n\\n        emit AccessRevoked(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Function to check if an address has a valid identity.\\n     * @param _owner The address to check.\\n     * @return true if the address has a valid identity, false otherwise.\\n     */\\n    function hasValidIdentity(address _owner) external view returns (bool) {\\n        return hasIdentity[_owner];\\n    }\\n\\n    /**\\n     * @dev Function to get identity information for a given address.\\n     * @param _owner The address of the identity owner.\\n     * @return name The name of the identity owner.\\n     * @return age The age of the identity owner.\\n     */\\n    function getIdentity(address _owner) external view returns (string memory, uint) {\\n        Identity storage requestedIdentity = identities[_owner];\\n        require(requestedIdentity.exists, \\\"Identity does not exist\\\");\\n\\n        return (requestedIdentity.name, requestedIdentity.age);\\n    }\\n\\n    /**\\n     * @dev Function to get a list of all identities.\\n     * @return allIdentities An array containing all valid identity addresses.\\n     */\\n    function getAllIdentities() external view returns (address[] memory) {\\n    address[] memory allIdentities = new address[](block.number - 1);\\n    uint index = 0;\\n\\n    for (uint i = 1; i < block.number; i++) {\\n        address identityOwner = identitiesByIndex[i];\\n        if (identities[identityOwner].exists) {\\n            allIdentities[index] = identityOwner;\\n            index++;\\n        }\\n    }\\n\\n    // Resize the array to the actual number of valid identities\\n    assembly {\\n        mstore(allIdentities, index)\\n    }\\n\\n    return allIdentities;\\n}\\n}\\n\",\"keccak256\":\"0x5d4445581a0c39b0455f765f7a9107771a1eb0839cc4a69fcc7efba402041630\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506116c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80634e4c7d9b116100665780634e4c7d9b1461015957806359b9248c146101635780637eeede351461017f578063bc14e4571461019d578063f653b81e146101b957610093565b8063237f1a211461009857806324019f71146100c85780632881ad6e146100f85780632fea7b8114610128575b600080fd5b6100b260048036038101906100ad9190610d15565b6101ec565b6040516100bf9190610d5d565b60405180910390f35b6100e260048036038101906100dd9190610d15565b61020c565b6040516100ef9190610d5d565b60405180910390f35b610112600480360381019061010d9190610dae565b610262565b60405161011f9190610dea565b60405180910390f35b610142600480360381019061013d9190610d15565b610295565b604051610150929190610ea4565b60405180910390f35b6101616103ca565b005b61017d60048036038101906101789190611009565b610587565b005b610187610796565b6040516101949190611123565b60405180910390f35b6101b760048036038101906101b29190611009565b61090a565b005b6101d360048036038101906101ce9190610d15565b610b61565b6040516101e39493929190611145565b60405180910390f35b60026020528060005260406000206000915054906101000a900460ff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160009054906101000a900460ff1661032b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610322906111dd565b60405180910390fd5b8060000181600101548180546103409061122c565b80601f016020809104026020016040519081016040528092919081815260200182805461036c9061122c565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b505050505091509250925050915091565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610456576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044d906111dd565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006104a59190610c46565b60018201600090556002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f1b9b72fde9da721e70e6aca3b0cf4cbe73e82765ef1f280157740376531bfdd860405160405180910390a2565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c906111dd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db906112a9565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000190816107379190611475565b508181600101819055503373ffffffffffffffffffffffffffffffffffffffff167ff766cba52472f168bac76b83b02493bdd09c6e1462599e934b7ecead5950d1d98484604051610789929190610ea4565b60405180910390a2505050565b606060006001436107a79190611576565b67ffffffffffffffff8111156107c0576107bf610ede565b5b6040519080825280602002602001820160405280156107ee5781602001602082028036833780820191505090505b509050600080600190505b438110156108fe5760006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156108ea57808484815181106108a1576108a06115aa565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806108e6906115d9565b9350505b5080806108f6906115d9565b9150506107f9565b50808252819250505090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109909061166d565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000190816109ec9190611475565b5081816001018190555060018160020160006101000a81548160ff021916908315150217905550338160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503360016000600143610ac09190611576565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f06bd209378e3df7a1561fcbdedeedd0d917023f6c33733a7320a02f1c84a62e78484604051610b54929190610ea4565b60405180910390a2505050565b6000602052806000526040600020600091509050806000018054610b849061122c565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb09061122c565b8015610bfd5780601f10610bd257610100808354040283529160200191610bfd565b820191906000526020600020905b815481529060010190602001808311610be057829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b508054610c529061122c565b6000825580601f10610c645750610c83565b601f016020900490600052602060002090810190610c829190610c86565b5b50565b5b80821115610c9f576000816000905550600101610c87565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ce282610cb7565b9050919050565b610cf281610cd7565b8114610cfd57600080fd5b50565b600081359050610d0f81610ce9565b92915050565b600060208284031215610d2b57610d2a610cad565b5b6000610d3984828501610d00565b91505092915050565b60008115159050919050565b610d5781610d42565b82525050565b6000602082019050610d726000830184610d4e565b92915050565b6000819050919050565b610d8b81610d78565b8114610d9657600080fd5b50565b600081359050610da881610d82565b92915050565b600060208284031215610dc457610dc3610cad565b5b6000610dd284828501610d99565b91505092915050565b610de481610cd7565b82525050565b6000602082019050610dff6000830184610ddb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e3f578082015181840152602081019050610e24565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e6782610e05565b610e718185610e10565b9350610e81818560208601610e21565b610e8a81610e4b565b840191505092915050565b610e9e81610d78565b82525050565b60006040820190508181036000830152610ebe8185610e5c565b9050610ecd6020830184610e95565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f1682610e4b565b810181811067ffffffffffffffff82111715610f3557610f34610ede565b5b80604052505050565b6000610f48610ca3565b9050610f548282610f0d565b919050565b600067ffffffffffffffff821115610f7457610f73610ede565b5b610f7d82610e4b565b9050602081019050919050565b82818337600083830152505050565b6000610fac610fa784610f59565b610f3e565b905082815260208101848484011115610fc857610fc7610ed9565b5b610fd3848285610f8a565b509392505050565b600082601f830112610ff057610fef610ed4565b5b8135611000848260208601610f99565b91505092915050565b600080604083850312156110205761101f610cad565b5b600083013567ffffffffffffffff81111561103e5761103d610cb2565b5b61104a85828601610fdb565b925050602061105b85828601610d99565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109a81610cd7565b82525050565b60006110ac8383611091565b60208301905092915050565b6000602082019050919050565b60006110d082611065565b6110da8185611070565b93506110e583611081565b8060005b838110156111165781516110fd88826110a0565b9750611108836110b8565b9250506001810190506110e9565b5085935050505092915050565b6000602082019050818103600083015261113d81846110c5565b905092915050565b6000608082019050818103600083015261115f8187610e5c565b905061116e6020830186610e95565b61117b6040830185610d4e565b6111886060830184610ddb565b95945050505050565b7f4964656e7469747920646f6573206e6f74206578697374000000000000000000600082015250565b60006111c7601783610e10565b91506111d282611191565b602082019050919050565b600060208201905081810360008301526111f6816111ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061124457607f821691505b602082108103611257576112566111fd565b5b50919050565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b6000611293600d83610e10565b915061129e8261125d565b602082019050919050565b600060208201905081810360008301526112c281611286565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261132b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826112ee565b61133586836112ee565b95508019841693508086168417925050509392505050565b6000819050919050565b600061137261136d61136884610d78565b61134d565b610d78565b9050919050565b6000819050919050565b61138c83611357565b6113a061139882611379565b8484546112fb565b825550505050565b600090565b6113b56113a8565b6113c0818484611383565b505050565b5b818110156113e4576113d96000826113ad565b6001810190506113c6565b5050565b601f821115611429576113fa816112c9565b611403846112de565b81016020851015611412578190505b61142661141e856112de565b8301826113c5565b50505b505050565b600082821c905092915050565b600061144c6000198460080261142e565b1980831691505092915050565b6000611465838361143b565b9150826002028217905092915050565b61147e82610e05565b67ffffffffffffffff81111561149757611496610ede565b5b6114a1825461122c565b6114ac8282856113e8565b600060209050601f8311600181146114df57600084156114cd578287015190505b6114d78582611459565b86555061153f565b601f1984166114ed866112c9565b60005b82811015611515578489015182556001820191506020850194506020810190506114f0565b86831015611532578489015161152e601f89168261143b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061158182610d78565b915061158c83610d78565b92508282039050818111156115a4576115a3611547565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006115e482610d78565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361161657611615611547565b5b600182019050919050565b7f4964656e7469747920616c726561647920657869737473000000000000000000600082015250565b6000611657601783610e10565b915061166282611621565b602082019050919050565b600060208201905081810360008301526116868161164a565b905091905056fea2646970667358221220932ddef3cf8a68134de0147b05239a9ee78a2a82b1928c5afb5ff61afeafd76b64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Implements a decentralized identity system on the CELO blockchain.",
    "kind": "dev",
    "methods": {
      "createIdentity(string,uint256)": {
        "details": "Function to create a new identity.",
        "params": {
          "_age": "The age of the identity owner.",
          "_name": "The name of the identity owner."
        }
      },
      "getAllIdentities()": {
        "details": "Function to get a list of all identities.",
        "returns": {
          "_0": "allIdentities An array containing all valid identity addresses."
        }
      },
      "getIdentity(address)": {
        "details": "Function to get identity information for a given address.",
        "params": {
          "_owner": "The address of the identity owner."
        },
        "returns": {
          "_0": "name The name of the identity owner.",
          "_1": "age The age of the identity owner."
        }
      },
      "hasValidIdentity(address)": {
        "details": "Function to check if an address has a valid identity.",
        "params": {
          "_owner": "The address to check."
        },
        "returns": {
          "_0": "true if the address has a valid identity, false otherwise."
        }
      },
      "revokeAccess()": {
        "details": "Function to revoke access and delete identity."
      },
      "updateIdentity(string,uint256)": {
        "details": "Function to update identity information.",
        "params": {
          "_newAge": "The new age of the identity owner.",
          "_newName": "The new name of the identity owner."
        }
      }
    },
    "title": "Decentralized Identity Smart Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identities",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Identity)12_storage)"
      },
      {
        "astId": 21,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identitiesByIndex",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 25,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "hasIdentity",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Identity)12_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DecentralizedIdentity.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)12_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)12_storage": {
        "encoding": "inplace",
        "label": "struct DecentralizedIdentity.Identity",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "exists",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 11,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "owner",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}