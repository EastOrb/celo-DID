{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "name": "IdentityCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "IdentityDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "IdentityRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAge",
          "type": "uint256"
        }
      ],
      "name": "IdentityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "IdentityVerified",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "name": "createIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "identityOwner",
          "type": "address"
        }
      ],
      "name": "deleteIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllIdentities",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct DecentralizedIdentity.Identity[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "identities",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "revoked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "identitiesByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identityCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "identityOwner",
          "type": "address"
        }
      ],
      "name": "revokeIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "newAge",
          "type": "uint256"
        }
      ],
      "name": "updateIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "identityOwner",
          "type": "address"
        }
      ],
      "name": "verifyIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc2e112d2ab0c3805dafb87b80b3c0c05a6b689c895b5113c35d04814210fcb38",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1644914",
    "logsBloom": "0x
    "blockHash": "0xf481bb9388c2781aaf1127fac4773f3da2add63e893ae8b5ff5665361e737eb9",
    "transactionHash": "0xc2e112d2ab0c3805dafb87b80b3c0c05a6b689c895b5113c35d04814210fcb38",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1644914",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "eb30cb633b455a46db2d8b2bb346f175",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IdentityDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IdentityRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAge\",\"type\":\"uint256\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IdentityVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"createIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"identityOwner\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllIdentities\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct DecentralizedIdentity.Identity[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"identities\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"identitiesByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"identityOwner\",\"type\":\"address\"}],\"name\":\"revokeIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"newAge\",\"type\":\"uint256\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"identityOwner\",\"type\":\"address\"}],\"name\":\"verifyIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createIdentity(string,uint256)\":{\"details\":\"Function to create a new identity\",\"params\":{\"age\":\"The age of the identity\",\"name\":\"The name of the identity\"}},\"deleteIdentity(address)\":{\"details\":\"Function to delete an identity\",\"params\":{\"identityOwner\":\"The address of the identity to be deleted\"}},\"getAllIdentities()\":{\"details\":\"Function to get details of all identities\",\"returns\":{\"_0\":\"An array of Identity structs representing all identities\"}},\"revokeIdentity(address)\":{\"details\":\"Function to revoke an identity\",\"params\":{\"identityOwner\":\"The address of the identity to be revoked\"}},\"updateIdentity(string,uint256)\":{\"details\":\"Function to update an identity\",\"params\":{\"newAge\":\"The new age of the identity\",\"newName\":\"The new name of the identity\"}},\"verifyIdentity(address)\":{\"details\":\"Function to verify an identity\",\"params\":{\"identityOwner\":\"The address of the identity to be verified\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Did.sol\":\"DecentralizedIdentity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Did.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract DecentralizedIdentity {\\n    // Struct to represent an identity\\n    struct Identity {\\n        string name;\\n        uint age;\\n        bool exists;\\n        bool verified;\\n        bool revoked;\\n    }\\n\\n    // Mapping to store identity details by address\\n    mapping(address => Identity) public identities;\\n\\n    // Mapping to store addresses of identities by index\\n    mapping(uint => address) public identitiesByIndex;\\n\\n    // Counter to keep track of the number of identities\\n    uint public identityCount;\\n\\n    // Events to log identity-related actions\\n    event IdentityCreated(address indexed owner, string name, uint age);\\n    event IdentityUpdated(address indexed owner, string newName, uint newAge);\\n    event IdentityVerified(address indexed owner);\\n    event IdentityRevoked(address indexed owner);\\n    event IdentityDeleted(address indexed owner);\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is the owner of the identity\\n     */\\n    modifier onlyIdentityOwner() {\\n        require(identities[msg.sender].exists, \\\"Identity does not exist\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is a verified identity\\n     */\\n    modifier onlyVerifier() {\\n        require(identities[msg.sender].exists && identities[msg.sender].verified, \\\"Not a verified identity\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is a verified identity eligible to revoke another identity\\n     * @param identityOwner The address of the identity to be revoked\\n     */\\n    modifier onlyRevoker(address identityOwner) {\\n        require(identities[msg.sender].exists && identities[msg.sender].verified, \\\"Not a verified identity\\\");\\n        require(identities[identityOwner].exists && !identities[identityOwner].revoked, \\\"Identity not valid for revocation\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is a verified identity eligible to delete another identity\\n     * @param identityOwner The address of the identity to be deleted\\n     */\\n    modifier onlyDeleter(address identityOwner) {\\n        require(identities[msg.sender].exists && identities[msg.sender].verified, \\\"Not a verified identity\\\");\\n        require(identities[identityOwner].exists, \\\"Identity not valid for deletion\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Function to create a new identity\\n     * @param name The name of the identity\\n     * @param age The age of the identity\\n     */\\n    function createIdentity(string memory name, uint age) external {\\n        require(!identities[msg.sender].exists, \\\"Identity already exists\\\");\\n        require(bytes(name).length > 0, \\\"Name cannot be empty\\\");\\n\\n        identities[msg.sender] = Identity(name, age, true, false, false);\\n        identitiesByIndex[identityCount + 1] = msg.sender;\\n        identityCount++;\\n\\n        emit IdentityCreated(msg.sender, name, age);\\n    }\\n\\n    /**\\n     * @dev Function to update an identity\\n     * @param newName The new name of the identity\\n     * @param newAge The new age of the identity\\n     */\\n    function updateIdentity(string memory newName, uint newAge) external onlyIdentityOwner {\\n        require(bytes(newName).length > 0, \\\"Name cannot be empty\\\");\\n\\n        identities[msg.sender].name = newName;\\n        identities[msg.sender].age = newAge;\\n\\n        emit IdentityUpdated(msg.sender, newName, newAge);\\n    }\\n\\n    /**\\n     * @dev Function to verify an identity\\n     * @param identityOwner The address of the identity to be verified\\n     */\\n    function verifyIdentity(address identityOwner) external {\\n        require(!identities[identityOwner].verified, \\\"Identity already verified\\\");\\n\\n        identities[identityOwner].verified = true;\\n\\n        emit IdentityVerified(identityOwner);\\n    }\\n\\n    /**\\n     * @dev Function to revoke an identity\\n     * @param identityOwner The address of the identity to be revoked\\n     */\\n    function revokeIdentity(address identityOwner) external onlyRevoker(identityOwner) {\\n        identities[identityOwner].revoked = true;\\n\\n        emit IdentityRevoked(identityOwner);\\n    }\\n\\n    /**\\n     * @dev Function to delete an identity\\n     * @param identityOwner The address of the identity to be deleted\\n     */\\n    function deleteIdentity(address identityOwner) external onlyDeleter(identityOwner) {\\n        delete identities[identityOwner];\\n        emit IdentityDeleted(identityOwner);\\n    }\\n\\n    /**\\n     * @dev Function to get details of all identities\\n     * @return An array of Identity structs representing all identities\\n     */\\n    function getAllIdentities() external view returns (Identity[] memory) {\\n        Identity[] memory allIdentities = new Identity[](identityCount);\\n\\n        for (uint i = 1; i <= identityCount; i++) {\\n            address identityOwner = identitiesByIndex[i];\\n            allIdentities[i - 1] = identities[identityOwner];\\n        }\\n\\n        return allIdentities;\\n    }\\n}\\n\",\"keccak256\":\"0x9118f4521161d1307cddf8ce2671158cb141b5621d373a747567cf3349cdeb3c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611ce5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637eeede35116100665780637eeede351461011e578063a8d29d1d1461013c578063b5b90fd914610158578063bc14e45714610174578063f653b81e1461019057610093565b80630ebddd17146100985780632881ad6e146100b457806338678ba5146100e457806359b9248c14610102575b600080fd5b6100b260048036038101906100ad919061103d565b6101c4565b005b6100ce60048036038101906100c991906110a0565b610431565b6040516100db91906110dc565b60405180910390f35b6100ec610464565b6040516100f99190611106565b60405180910390f35b61011c60048036038101906101179190611267565b61046a565b005b610126610625565b60405161013391906114a4565b60405180910390f35b6101566004803603810190610151919061103d565b610845565b005b610172600480360381019061016d919061103d565b610a95565b005b61018e60048036038101906101899190611267565b610bc4565b005b6101aa60048036038101906101a5919061103d565b610e54565b6040516101bb95949392919061151f565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561026b57506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b6102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a1906115c5565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561035157506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160029054906101000a900460ff16155b610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611657565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160026101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fccf550e579fbeb7d56da9a0175f8d4526535cab139e73b592516f1916d4075dd60405160405180910390a25050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef906116c3565b60405180910390fd5b600082511161053c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105339061172f565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908161058a919061195b565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167ff766cba52472f168bac76b83b02493bdd09c6e1462599e934b7ecead5950d1d98383604051610619929190611a2d565b60405180910390a25050565b6060600060025467ffffffffffffffff8111156106455761064461113c565b5b60405190808252806020026020018201604052801561067e57816020015b61066b610f39565b8152602001906001900390816106635790505b5090506000600190505b600254811161083d5760006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546107229061177e565b80601f016020809104026020016040519081016040528092919081815260200182805461074e9061177e565b801561079b5780601f106107705761010080835404028352916020019161079b565b820191906000526020600020905b81548152906001019060200180831161077e57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020016002820160029054906101000a900460ff1615151515815250508360018461080d9190611a8c565b8151811061081e5761081d611ac0565b5b602002602001018190525050808061083590611aef565b915050610688565b508091505090565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1680156108ec57506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b61092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610922906115c5565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b090611b83565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610a089190610f6e565b60018201600090556002820160006101000a81549060ff02191690556002820160016101000a81549060ff02191690556002820160026101000a81549060ff021916905550508173ffffffffffffffffffffffffffffffffffffffff167fc24bb9f4ebb7a8b8d37e375af6ac3f7e39d0218d2042bbd057d783048a904cd860405160405180910390a25050565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff1615610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b90611bef565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f02f93fdaafad8edad1ca75101b1fbda62e64ab9afc26d0ea801ccf6ef02c09ab60405160405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610c53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4a90611c5b565b60405180910390fd5b6000825111610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e9061172f565b60405180910390fd5b6040518060a00160405280838152602001828152602001600115158152602001600015158152602001600015158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610d1a919061195b565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555060808201518160020160026101000a81548160ff02191690831515021790555090505033600160006001600254610d9c9190611c7b565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026000815480929190610dfb90611aef565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f06bd209378e3df7a1561fcbdedeedd0d917023f6c33733a7320a02f1c84a62e78383604051610e48929190611a2d565b60405180910390a25050565b6000602052806000526040600020600091509050806000018054610e779061177e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea39061177e565b8015610ef05780601f10610ec557610100808354040283529160200191610ef0565b820191906000526020600020905b815481529060010190602001808311610ed357829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16908060020160029054906101000a900460ff16905085565b6040518060a0016040528060608152602001600081526020016000151581526020016000151581526020016000151581525090565b508054610f7a9061177e565b6000825580601f10610f8c5750610fab565b601f016020900490600052602060002090810190610faa9190610fae565b5b50565b5b80821115610fc7576000816000905550600101610faf565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100a82610fdf565b9050919050565b61101a81610fff565b811461102557600080fd5b50565b60008135905061103781611011565b92915050565b60006020828403121561105357611052610fd5565b5b600061106184828501611028565b91505092915050565b6000819050919050565b61107d8161106a565b811461108857600080fd5b50565b60008135905061109a81611074565b92915050565b6000602082840312156110b6576110b5610fd5565b5b60006110c48482850161108b565b91505092915050565b6110d681610fff565b82525050565b60006020820190506110f160008301846110cd565b92915050565b6111008161106a565b82525050565b600060208201905061111b60008301846110f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111748261112b565b810181811067ffffffffffffffff821117156111935761119261113c565b5b80604052505050565b60006111a6610fcb565b90506111b2828261116b565b919050565b600067ffffffffffffffff8211156111d2576111d161113c565b5b6111db8261112b565b9050602081019050919050565b82818337600083830152505050565b600061120a611205846111b7565b61119c565b90508281526020810184848401111561122657611225611126565b5b6112318482856111e8565b509392505050565b600082601f83011261124e5761124d611121565b5b813561125e8482602086016111f7565b91505092915050565b6000806040838503121561127e5761127d610fd5565b5b600083013567ffffffffffffffff81111561129c5761129b610fda565b5b6112a885828601611239565b92505060206112b98582860161108b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561132957808201518184015260208101905061130e565b60008484015250505050565b6000611340826112ef565b61134a81856112fa565b935061135a81856020860161130b565b6113638161112b565b840191505092915050565b6113778161106a565b82525050565b60008115159050919050565b6113928161137d565b82525050565b600060a08301600083015184820360008601526113b58282611335565b91505060208301516113ca602086018261136e565b5060408301516113dd6040860182611389565b5060608301516113f06060860182611389565b5060808301516114036080860182611389565b508091505092915050565b600061141a8383611398565b905092915050565b6000602082019050919050565b600061143a826112c3565b61144481856112ce565b935083602082028501611456856112df565b8060005b858110156114925784840389528151611473858261140e565b945061147e83611422565b925060208a0199505060018101905061145a565b50829750879550505050505092915050565b600060208201905081810360008301526114be818461142f565b905092915050565b600082825260208201905092915050565b60006114e2826112ef565b6114ec81856114c6565b93506114fc81856020860161130b565b6115058161112b565b840191505092915050565b6115198161137d565b82525050565b600060a082019050818103600083015261153981886114d7565b905061154860208301876110f7565b6115556040830186611510565b6115626060830185611510565b61156f6080830184611510565b9695505050505050565b7f4e6f742061207665726966696564206964656e74697479000000000000000000600082015250565b60006115af6017836114c6565b91506115ba82611579565b602082019050919050565b600060208201905081810360008301526115de816115a2565b9050919050565b7f4964656e74697479206e6f742076616c696420666f72207265766f636174696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006116416021836114c6565b915061164c826115e5565b604082019050919050565b6000602082019050818103600083015261167081611634565b9050919050565b7f4964656e7469747920646f6573206e6f74206578697374000000000000000000600082015250565b60006116ad6017836114c6565b91506116b882611677565b602082019050919050565b600060208201905081810360008301526116dc816116a0565b9050919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b60006117196014836114c6565b9150611724826116e3565b602082019050919050565b600060208201905081810360008301526117488161170c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179657607f821691505b6020821081036117a9576117a861174f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117d4565b61181b86836117d4565b95508019841693508086168417925050509392505050565b6000819050919050565b600061185861185361184e8461106a565b611833565b61106a565b9050919050565b6000819050919050565b6118728361183d565b61188661187e8261185f565b8484546117e1565b825550505050565b600090565b61189b61188e565b6118a6818484611869565b505050565b5b818110156118ca576118bf600082611893565b6001810190506118ac565b5050565b601f82111561190f576118e0816117af565b6118e9846117c4565b810160208510156118f8578190505b61190c611904856117c4565b8301826118ab565b50505b505050565b600082821c905092915050565b600061193260001984600802611914565b1980831691505092915050565b600061194b8383611921565b9150826002028217905092915050565b611964826112ef565b67ffffffffffffffff81111561197d5761197c61113c565b5b611987825461177e565b6119928282856118ce565b600060209050601f8311600181146119c557600084156119b3578287015190505b6119bd858261193f565b865550611a25565b601f1984166119d3866117af565b60005b828110156119fb578489015182556001820191506020850194506020810190506119d6565b86831015611a185784890151611a14601f891682611921565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611a4781856114d7565b9050611a5660208301846110f7565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a978261106a565b9150611aa28361106a565b9250828203905081811115611aba57611ab9611a5d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611afa8261106a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b2c57611b2b611a5d565b5b600182019050919050565b7f4964656e74697479206e6f742076616c696420666f722064656c6574696f6e00600082015250565b6000611b6d601f836114c6565b9150611b7882611b37565b602082019050919050565b60006020820190508181036000830152611b9c81611b60565b9050919050565b7f4964656e7469747920616c726561647920766572696669656400000000000000600082015250565b6000611bd96019836114c6565b9150611be482611ba3565b602082019050919050565b60006020820190508181036000830152611c0881611bcc565b9050919050565b7f4964656e7469747920616c726561647920657869737473000000000000000000600082015250565b6000611c456017836114c6565b9150611c5082611c0f565b602082019050919050565b60006020820190508181036000830152611c7481611c38565b9050919050565b6000611c868261106a565b9150611c918361106a565b9250828201905080821115611ca957611ca8611a5d565b5b9291505056fea2646970667358221220fea440e477d0fb575102f24827bad97d7522f40c7ee899e961a1d836f5bc3cf364736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80637eeede35116100665780637eeede351461011e578063a8d29d1d1461013c578063b5b90fd914610158578063bc14e45714610174578063f653b81e1461019057610093565b80630ebddd17146100985780632881ad6e146100b457806338678ba5146100e457806359b9248c14610102575b600080fd5b6100b260048036038101906100ad919061103d565b6101c4565b005b6100ce60048036038101906100c991906110a0565b610431565b6040516100db91906110dc565b60405180910390f35b6100ec610464565b6040516100f99190611106565b60405180910390f35b61011c60048036038101906101179190611267565b61046a565b005b610126610625565b60405161013391906114a4565b60405180910390f35b6101566004803603810190610151919061103d565b610845565b005b610172600480360381019061016d919061103d565b610a95565b005b61018e60048036038101906101899190611267565b610bc4565b005b6101aa60048036038101906101a5919061103d565b610e54565b6040516101bb95949392919061151f565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561026b57506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b6102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a1906115c5565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561035157506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160029054906101000a900460ff16155b610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611657565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160026101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fccf550e579fbeb7d56da9a0175f8d4526535cab139e73b592516f1916d4075dd60405160405180910390a25050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef906116c3565b60405180910390fd5b600082511161053c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105339061172f565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908161058a919061195b565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167ff766cba52472f168bac76b83b02493bdd09c6e1462599e934b7ecead5950d1d98383604051610619929190611a2d565b60405180910390a25050565b6060600060025467ffffffffffffffff8111156106455761064461113c565b5b60405190808252806020026020018201604052801561067e57816020015b61066b610f39565b8152602001906001900390816106635790505b5090506000600190505b600254811161083d5760006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546107229061177e565b80601f016020809104026020016040519081016040528092919081815260200182805461074e9061177e565b801561079b5780601f106107705761010080835404028352916020019161079b565b820191906000526020600020905b81548152906001019060200180831161077e57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020016002820160029054906101000a900460ff1615151515815250508360018461080d9190611a8c565b8151811061081e5761081d611ac0565b5b602002602001018190525050808061083590611aef565b915050610688565b508091505090565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1680156108ec57506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b61092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610922906115c5565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b090611b83565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610a089190610f6e565b60018201600090556002820160006101000a81549060ff02191690556002820160016101000a81549060ff02191690556002820160026101000a81549060ff021916905550508173ffffffffffffffffffffffffffffffffffffffff167fc24bb9f4ebb7a8b8d37e375af6ac3f7e39d0218d2042bbd057d783048a904cd860405160405180910390a25050565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff1615610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b90611bef565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f02f93fdaafad8edad1ca75101b1fbda62e64ab9afc26d0ea801ccf6ef02c09ab60405160405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610c53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4a90611c5b565b60405180910390fd5b6000825111610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e9061172f565b60405180910390fd5b6040518060a00160405280838152602001828152602001600115158152602001600015158152602001600015158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610d1a919061195b565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555060808201518160020160026101000a81548160ff02191690831515021790555090505033600160006001600254610d9c9190611c7b565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026000815480929190610dfb90611aef565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f06bd209378e3df7a1561fcbdedeedd0d917023f6c33733a7320a02f1c84a62e78383604051610e48929190611a2d565b60405180910390a25050565b6000602052806000526040600020600091509050806000018054610e779061177e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea39061177e565b8015610ef05780601f10610ec557610100808354040283529160200191610ef0565b820191906000526020600020905b815481529060010190602001808311610ed357829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16908060020160029054906101000a900460ff16905085565b6040518060a0016040528060608152602001600081526020016000151581526020016000151581526020016000151581525090565b508054610f7a9061177e565b6000825580601f10610f8c5750610fab565b601f016020900490600052602060002090810190610faa9190610fae565b5b50565b5b80821115610fc7576000816000905550600101610faf565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100a82610fdf565b9050919050565b61101a81610fff565b811461102557600080fd5b50565b60008135905061103781611011565b92915050565b60006020828403121561105357611052610fd5565b5b600061106184828501611028565b91505092915050565b6000819050919050565b61107d8161106a565b811461108857600080fd5b50565b60008135905061109a81611074565b92915050565b6000602082840312156110b6576110b5610fd5565b5b60006110c48482850161108b565b91505092915050565b6110d681610fff565b82525050565b60006020820190506110f160008301846110cd565b92915050565b6111008161106a565b82525050565b600060208201905061111b60008301846110f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111748261112b565b810181811067ffffffffffffffff821117156111935761119261113c565b5b80604052505050565b60006111a6610fcb565b90506111b2828261116b565b919050565b600067ffffffffffffffff8211156111d2576111d161113c565b5b6111db8261112b565b9050602081019050919050565b82818337600083830152505050565b600061120a611205846111b7565b61119c565b90508281526020810184848401111561122657611225611126565b5b6112318482856111e8565b509392505050565b600082601f83011261124e5761124d611121565b5b813561125e8482602086016111f7565b91505092915050565b6000806040838503121561127e5761127d610fd5565b5b600083013567ffffffffffffffff81111561129c5761129b610fda565b5b6112a885828601611239565b92505060206112b98582860161108b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561132957808201518184015260208101905061130e565b60008484015250505050565b6000611340826112ef565b61134a81856112fa565b935061135a81856020860161130b565b6113638161112b565b840191505092915050565b6113778161106a565b82525050565b60008115159050919050565b6113928161137d565b82525050565b600060a08301600083015184820360008601526113b58282611335565b91505060208301516113ca602086018261136e565b5060408301516113dd6040860182611389565b5060608301516113f06060860182611389565b5060808301516114036080860182611389565b508091505092915050565b600061141a8383611398565b905092915050565b6000602082019050919050565b600061143a826112c3565b61144481856112ce565b935083602082028501611456856112df565b8060005b858110156114925784840389528151611473858261140e565b945061147e83611422565b925060208a0199505060018101905061145a565b50829750879550505050505092915050565b600060208201905081810360008301526114be818461142f565b905092915050565b600082825260208201905092915050565b60006114e2826112ef565b6114ec81856114c6565b93506114fc81856020860161130b565b6115058161112b565b840191505092915050565b6115198161137d565b82525050565b600060a082019050818103600083015261153981886114d7565b905061154860208301876110f7565b6115556040830186611510565b6115626060830185611510565b61156f6080830184611510565b9695505050505050565b7f4e6f742061207665726966696564206964656e74697479000000000000000000600082015250565b60006115af6017836114c6565b91506115ba82611579565b602082019050919050565b600060208201905081810360008301526115de816115a2565b9050919050565b7f4964656e74697479206e6f742076616c696420666f72207265766f636174696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006116416021836114c6565b915061164c826115e5565b604082019050919050565b6000602082019050818103600083015261167081611634565b9050919050565b7f4964656e7469747920646f6573206e6f74206578697374000000000000000000600082015250565b60006116ad6017836114c6565b91506116b882611677565b602082019050919050565b600060208201905081810360008301526116dc816116a0565b9050919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b60006117196014836114c6565b9150611724826116e3565b602082019050919050565b600060208201905081810360008301526117488161170c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179657607f821691505b6020821081036117a9576117a861174f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117d4565b61181b86836117d4565b95508019841693508086168417925050509392505050565b6000819050919050565b600061185861185361184e8461106a565b611833565b61106a565b9050919050565b6000819050919050565b6118728361183d565b61188661187e8261185f565b8484546117e1565b825550505050565b600090565b61189b61188e565b6118a6818484611869565b505050565b5b818110156118ca576118bf600082611893565b6001810190506118ac565b5050565b601f82111561190f576118e0816117af565b6118e9846117c4565b810160208510156118f8578190505b61190c611904856117c4565b8301826118ab565b50505b505050565b600082821c905092915050565b600061193260001984600802611914565b1980831691505092915050565b600061194b8383611921565b9150826002028217905092915050565b611964826112ef565b67ffffffffffffffff81111561197d5761197c61113c565b5b611987825461177e565b6119928282856118ce565b600060209050601f8311600181146119c557600084156119b3578287015190505b6119bd858261193f565b865550611a25565b601f1984166119d3866117af565b60005b828110156119fb578489015182556001820191506020850194506020810190506119d6565b86831015611a185784890151611a14601f891682611921565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611a4781856114d7565b9050611a5660208301846110f7565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a978261106a565b9150611aa28361106a565b9250828203905081811115611aba57611ab9611a5d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611afa8261106a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b2c57611b2b611a5d565b5b600182019050919050565b7f4964656e74697479206e6f742076616c696420666f722064656c6574696f6e00600082015250565b6000611b6d601f836114c6565b9150611b7882611b37565b602082019050919050565b60006020820190508181036000830152611b9c81611b60565b9050919050565b7f4964656e7469747920616c726561647920766572696669656400000000000000600082015250565b6000611bd96019836114c6565b9150611be482611ba3565b602082019050919050565b60006020820190508181036000830152611c0881611bcc565b9050919050565b7f4964656e7469747920616c726561647920657869737473000000000000000000600082015250565b6000611c456017836114c6565b9150611c5082611c0f565b602082019050919050565b60006020820190508181036000830152611c7481611c38565b9050919050565b6000611c868261106a565b9150611c918361106a565b9250828201905080821115611ca957611ca8611a5d565b5b9291505056fea2646970667358221220fea440e477d0fb575102f24827bad97d7522f40c7ee899e961a1d836f5bc3cf364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createIdentity(string,uint256)": {
        "details": "Function to create a new identity",
        "params": {
          "age": "The age of the identity",
          "name": "The name of the identity"
        }
      },
      "deleteIdentity(address)": {
        "details": "Function to delete an identity",
        "params": {
          "identityOwner": "The address of the identity to be deleted"
        }
      },
      "getAllIdentities()": {
        "details": "Function to get details of all identities",
        "returns": {
          "_0": "An array of Identity structs representing all identities"
        }
      },
      "revokeIdentity(address)": {
        "details": "Function to revoke an identity",
        "params": {
          "identityOwner": "The address of the identity to be revoked"
        }
      },
      "updateIdentity(string,uint256)": {
        "details": "Function to update an identity",
        "params": {
          "newAge": "The new age of the identity",
          "newName": "The new name of the identity"
        }
      },
      "verifyIdentity(address)": {
        "details": "Function to verify an identity",
        "params": {
          "identityOwner": "The address of the identity to be verified"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identities",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Identity)12_storage)"
      },
      {
        "astId": 21,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identitiesByIndex",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 23,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identityCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Identity)12_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DecentralizedIdentity.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)12_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)12_storage": {
        "encoding": "inplace",
        "label": "struct DecentralizedIdentity.Identity",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "exists",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 9,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "verified",
            "offset": 1,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 11,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "revoked",
            "offset": 2,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}